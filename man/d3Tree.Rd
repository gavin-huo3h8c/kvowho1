% Generated by roxygen2 (4.0.2): do not edit by hand
\name{d3Tree}
\alias{d3Tree}
\title{Create Reingold-Tilford Tree network graphs and linear dendrograms.}
\source{
Reingold. E. M., and Tilford, J. S. (1981). Tidier Drawings of Trees.
IEEE Transactions on Software Engineering, SE-7(2), 223-228.

Mike Bostock: \url{http://bl.ocks.org/mbostock/4063550}.
}
\usage{
d3Tree(List, height = 800, width = 800, fontSize = 10,
  linkColour = "#ccc", nodeColour = "#fff", nodeStroke = "steelblue",
  textColour = "#111", opacity = 0.9, margin = 120, type = c("radial",
  "dendrogram"))
}
\arguments{
\item{List}{a hierarchical list object with a root node and children.}

\item{height}{numeric height for the network graph's frame area in pixels.}

\item{width}{numeric width for the network graph's frame area in pixels.}

\item{fontSize}{numeric font size in pixels for the node text labels.}

\item{linkColour}{character string specifying the colour you want the link
lines to be. Multiple formats supported (e.g. hexadecimal).}

\item{nodeColour}{character string specifying the colour you want the node
circles to be. Multiple formats supported (e.g. hexadecimal).}

\item{nodeStroke}{character string specifying the colour you want the node
perimeter to be. Multiple formats supported (e.g. hexadecimal).}

\item{textColour}{character string specifying the colour you want the text to
be before they are clicked. Multiple formats supported (e.g. hexadecimal).}

\item{opacity}{numeric value of the proportion opaque you would like the
graph elements to be.}

\item{margin}{integer value of the radial plot margin}

\item{type}{either "dendrogram" for a traditional cluster dendrogram
or "radial" for a radial Reingold-Tilford network graph. Abbreviation is
allowed (argument matching is used).}
}
\description{
Create Reingold-Tilford Tree network graphs and linear dendrograms.
}
\examples{
## dontrun
## Create a dendrogram from an R hclust object
 hc <- hclust(dist(USArrests), "ave")
 d3Tree(as.d3Tree(hc), type="dendrogram")

## Create tree from R list
# Create hierarchical list
CanadaPC <- list(name = "Canada", children = list(list(name = "Newfoundland",
                    children = list(list(name = "St. John's"))),
               list(name = "PEI",
                    children = list(list(name = "Charlottetown"))),
               list(name = "Nova Scotia",
                    children = list(list(name = "Halifax"))),
               list(name = "New Brunswick",
                    children = list(list(name = "Fredericton"))),
               list(name = "Quebec",
                    children = list(list(name = "Montreal"),
                                    list(name = "Quebec City"))),
               list(name = "Ontario",
                    children = list(list(name = "Toronto"),
                                    list(name = "Ottawa"))),
               list(name = "Manitoba",
                    children = list(list(name = "Winnipeg"))),
               list(name = "Saskatchewan",
                    children = list(list(name = "Regina"))),
               list(name = "Nunavuet",
                    children = list(list(name = "Iqaluit"))),
               list(name = "NWT",
                    children = list(list(name = "Yellowknife"))),
               list(name = "Alberta",
                    children = list(list(name = "Edmonton"))),
               list(name = "British Columbia",
                    children = list(list(name = "Victoria"),
                                    list(name = "Vancouver"))),
               list(name = "Yukon",
                    children = list(list(name = "Whitehorse")))
))

# Create tree
d3Tree(List = CanadaPC, fontSize = 10, width=600, height=600)

## Create tree from JSON formatted data
## Download JSON data
# library(RCurl)
# URL <- "https://raw.github.com/christophergandrud/d3Network/master/JSONdata/flare.json"
# Flare <- getURL(URL)

## Convert to list format
# Flare <- rjson::fromJSON(Flare)

## Recreate Bostock example from http://bl.ocks.org/mbostock/4063550
# d3Tree(List = Flare, file = "Flare.html",
#        fontSize = 10, opacity = 0.9)
}

