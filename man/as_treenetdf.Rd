% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as.treenetdf.R
\name{as_treenetdf}
\alias{as_treenetdf}
\title{Convert one of numerous data types to treeNetwork's 'native' treenetdf form}
\usage{
as_treenetdf(data = NULL, ...)
}
\arguments{
\item{data}{a tree network description in one of numerous forms (see details)}

\item{...}{other arguments that will be passed on to as_treenetdf}

\item{children_name}{character specifying the name used for the list element that contains the childeren elements}

\item{node_name}{character specifying the name used for the list element that contains the name of the node}

\item{root}{character specifying the string that should be used to name the root node}

\item{cols}{named character vector specifying the names of columns to be converted to the standard treenetdf names}

\item{dftype}{character specifying which type of data frame to convert. one of 'treenetdf' or 'leafpathdf'}

\item{subset}{character vector specifying the names of the columns (in order) that should be used to define the hierarchy}
}
\description{
The treeNetwork function uses a 'native' data format that consists of a data 
frame with minimally 2 vectors/columns, one named 'nodeId' and one named 
'parentId'. Other columns in the data frame are also passed on to the 
JavaScript code and attached to the elements in the D3 visualization so that
they can potentially be accessed by other JavaScript functions. This is an 
advantageous format because
- it's an easy to use and understand R-like format
- a hierarchical network can be succinctly defined by a list of each unique node and its parent node
- since each row defines a unique node, additional columns can be added to add node-specific properties
- in a hierarchical network, every link/edge can be uniquely identified by the node which it leads to, therefore each link/edge can also be specifically addressed by adding columns for formatting of the incoming link

as_treenetdf can convert from any of the following data types:
- leafpathdf (table) [parent|parent|node] data.frame
- hierarchical nested list (JSON)
- hclust
- data.tree Node
- igraph
- ape phylo
}
